7. Outlook:

7.1 Interface extensions

The interface bus concept (IOB) offers flexible possibilities for the extension of the physical interfaces to the experiment.

Due to its bus structure, e.g. external A/D or D/A converters can be connected directly to the DATA-IN or DATA-OUT bus. 
The control signals control signals can be generated by means of the 8 bit wide control bus. A later additional decoding 
of the four lower address bits (A0...A3) allows to connect up to 256 measuring modules and interface cards if necessary.

To be able to process digital signals (TTL level) directly, the use of latches (e.g. 74xx374) is recommended. In detail 
the following should be mentioned Standard interface circuits, as described in /41/, or to the interface cards developed 
in the context of the Z80-MAS extension (A/D converter card, single-bit I/O) and their description in /3/.

In addition, many manufacturers (Janich & Klass, Oettle & Reichler, etc.) offer inexpensive I/O cards with complex, 
programmable components (CIO, STI, etc.) on ECB plug-in cards, so that one can save time-consuming own developments here.


7.2 Multitasking system

On the software level, the data acquisition system can be considerably extended with respect to its real-time capability, 
if one switches to (quasi) parallel processing 
parallel processing.

Under the used LMI-FORTH (version 3.x) it is possible to implement a multitasking system. Here one understands by a 
task a user program that runs under control of the operating system (in this case FORTH) /42, 43, 44/. A task, which 
corresponds to a certain computing process, has a certain priority and memory allocation. Depending on the main 
memory size of the computer (PC-DOS : 640 kB), the individual tasks are allocated different tasks are assigned 
different address spaces. Each task has its own parameter and return stack. A communication between the tasks 
(exchange of data) happens over common data fields ('Shared-Data'). During program execution, the tasks can 
assume different states:

Task state:
    │    
    ├── inactive (STOP) : Task is finished
    │
    ├── waiting (WAIT) : Task is 'ready to compute',
    │ but blocked
    │     
    ├── running (START) : Task is active, this state 	
    │ only one task at a time can
    │ assume
    │
    └── fault (FAIL) : Task has run into a state with errors.
    
The figure below illustrates the transitions between the individual task states.


Fig. 33: Transitions between task states (after /7/)

Tasks which themselves run sequentially are processed in parallel under FORTH. They are handled in the so-called 
'time-sharing' procedure, i.e. a given time interval is divided into as many time slices as there are tasks. 
All tasks are given the same priority.

Processors are allocated to the tasks in a circular process (Fig. 34).


Fig. 34: Processor allocation for multitasking ( after /7/)

Structure of a parallel measurement program:

Due to the simultaneous tasks like data acquisition and pre-evaluation (see chapter 7.3), parallel competing 
tasks are required. A possible implementation of such a measuring program in the LMI-FORTH Multitasker is 
shown in the following example:

TASKER ( Activating the multitasker )
		 ( is called only once )
(Generating the task control blocks)
PSD1 RSD1 BUILD GET&SAVE_DATA    
PSD2 RSD2 BUILD ANALYZE_DATA     
		 ( PSD = Parameter stack depth )
		 ( RSD = return stack depth )

: GET&SAVE ... ; ( FORTH words : * Query interface )
		 ( * Data backup )
		 ( * File management )
: ANALYZE ... ; ( FORTH words: * Check quality criteria )
		 ( * Calculations )
		 ( * Interpolations )
		 ( * Graphical representation )
		 ( * etc. )

( ANALYZE task is deactivated )
: STOP_ANALYZE ANALYZE_DATA SLEEP ;

( ANALYZE task is activated again )
: RESTART_ANALYZE ANALYZE_DATA ACTIVE ;

( GET&SAVE task is deactivated )
: STOP_GET&SAVE GET&SAVE_DATA SLEEP ;


( Main routine )
MAIN						
        GET&SAVE_DATA START ( Start task )
	   BEGIN ( loop start )
		...
		DATA ?			( data available ? )
	 	IF
			STOP_ANALYZE ( stop ANALYZE task )
			@DATA ( Read data )
			SAVE ( Save data )
		ELSE RESTART_ANALYZE ( continue analysis )
		THEN PAUSE ( Interrupt GET&SAVE task )
	   AGAIN ;

( ... the actual measuring program )
: MEASUREMENT
		...
		ANALYZE_DATA START ( start data analysis )
					( as background task )   
		MAIN ( query of the measurement data )
					( interface )
		STOP_ANALYZE ( deactivate the background- )
					( basic task ANALYZE )
		GET&SAVE_DATA STOP ( Deactivate the front- )
					( basic task GET&SAVE_DATA )
		...
;

The above 'polling' query whether data is available from the subsystem should be replaced by an interrupt operation 
for time-critical applications, because hardware interrupts guarantee fastest processing speeds down to the μs range.


7.3 New scanning methods

With the help of the new computer concept, it is possible to use more computationally intensive measurement 
algorithms than before. As already indicated before, the subsystem working in real time can relieve the evaluation 
computer to a large extent by a suitably selected distribution of measuring tasks. Hereby the PC computer can 
be used for the pre-evaluation and evaluation of the measurement data already during the experiment.


Optical measurements:

In laser fluorescence measurements, the problem of recording the signal from the calibration mark interferometer
/45/ arises. In laboratory operation so far, the calibration mark spectrum at a free spectral range (FSR) of 
approx. 60.67 MHz is characterized by random shifts of the center of gravity and amplitude fluctuations of the 
calibration marks. Instead of cutting or completely omitting the 'bad' calibration marks during data evaluation, 
as was previously the case, it would be possible with the new system, to selectively perform a new scan. 

The data reduction program running on the PC system could directly influence the further processing of the 
experimentally acquired data on the basis of previously defined quality criteria. 

Suitable quality criteria could include, for example, a definition of the (FSR) and half-value widths 
(sigma ~ 8 ± 2 MHz). Outliers' in the fluorescence count rates, due to external interferences on the 
interface electronics, could also be corrected under software control.

The direct feedback of the data acquisition system due to the immediate measurement data analysis would 
increase the quality of the recorded spectra and contribute substantially to the reduction of the measurement data.

Fig. 35: Principle of the previous scanning methods

High frequency measurements:

Im Gegensatz zu den optischen Messungen läßt sich die dem Experiment eingespeiste Frequenz genau einstellen. Die Frequenzdekaden lassen sich unter
Rechnerkontrolle auf 0.1 Hz genau justieren. Dieses ermöglicht "punktuelle" Messungen bei unterschiedlichsten Frequenzwerten. Störungen, die sich
niederfrequent auf den Atomstrahl (rotierendes Target) auswirken, könnten durch eine geeignet ausgewählte aber zufällige Frequenzverteilung (random)
behoben werden, sofern diese gleichverteilt ist.

Der Langzeitdrift der Apparatur tritt allerdings aufgrund des nicht beliebig lang konstant gehaltenen Magnetfeldes auf. Eine in Echtzeit geführte 
Verarbeitung des Kontrollsignals (Vergleich von Soll- und Istwert) der neu entwickelten Magnetfeldregelung /25/ könnte dem Steuerprogramm das notwendige 
Gütekriterium zur Datenauswahl liefern.

Abschließend kann man festhalten, daß Unzulänglichkeiten, die durch Meßapparatur und Experiment bedingt sind, durch eine geeignete Auswahl von 
Meßdatenreduktionsprogrammen und entsprechenden Gütekriterien softwaremäßig begegnet werden kann.

Eine Voraussetzung hierfür ist die notwendige Rechnerleistung und sinnvolle Aufgabenverteilung während der Experimentsteuerung. 
Das hier beschriebene Zwei-Rechnersystem erfüllt diese Bedingungen und eröffnet neue Möglichkeiten für komplexere Scanverfahren.

Fig. 36:  Principle of the new scanning method
